/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.admin;

import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import model.admin;
import model.book;
import view.loginPage;
import view.user.mainPage;

/**
 *
 * @author chemlleijoseph
 */
public class mainAdminPage extends javax.swing.JFrame {

    final String url = "jdbc:sqlite:test.db";
    book model = new book();
    admin model2 = new admin();

    /**
     * Creates new form mainAdminPage
     *
     * @param uname
     */
    public mainAdminPage(String uname) throws SQLException {
        model2.setUser(uname);
        model2.findAdmin();
        initComponents();
        welcomeLabel.setText("Welcome, " + model2.getfName() + "!");

        bookTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    String title = bookTable.getValueAt(bookTable.getSelectedRow(), 0).toString();
                    try {
                        new adminBookInfo(title).setVisible(true);
                    } catch (IOException ex) {
                        Logger.getLogger(mainPage.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }

        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        welcomeLabel = new javax.swing.JLabel();
        exitButton = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        profileTab = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        catalogTab = new javax.swing.JPanel();
        genreSelect = new javax.swing.JComboBox<>();
        statusSelect = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookTable = new javax.swing.JTable();
        submitButton = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        titleField = new javax.swing.JTextField();
        authorField = new javax.swing.JTextField();
        titleLabel = new javax.swing.JLabel();
        genreLabel = new javax.swing.JLabel();
        authorLabel = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        statusField = new javax.swing.JComboBox<>();
        genreField = new javax.swing.JComboBox<>();
        submitButton23 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        genreSelect1 = new javax.swing.JComboBox<>();
        statusSelect1 = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        submitButton1 = new javax.swing.JLabel();
        logoutButton = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(237, 151, 157));

        welcomeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        exitButton.setText("X");
        exitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitButtonMouseClicked(evt);
            }
        });

        profileTab.setBackground(new java.awt.Color(237, 151, 157));

        nameLabel.setText("Name: " + model2.getfName() + " " + model2.getlName());

        jLabel2.setText("Username: " + model2.getUser());

        javax.swing.GroupLayout profileTabLayout = new javax.swing.GroupLayout(profileTab);
        profileTab.setLayout(profileTabLayout);
        profileTabLayout.setHorizontalGroup(
            profileTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profileTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(profileTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameLabel)
                    .addComponent(jLabel2))
                .addContainerGap(622, Short.MAX_VALUE))
        );
        profileTabLayout.setVerticalGroup(
            profileTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profileTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap(221, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Profile", profileTab);

        catalogTab.setBackground(new java.awt.Color(237, 151, 157));

        genreSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Genre", "Fantasy", "Horror", "Adventure", "Science Fiction", "Romance", "Mystery", "Comics / Graphic Novels", "Biography / Autobiography", "Self - Help", "Reference / Textbooks", " " }));

        statusSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Status", "Available", "Checked Out", "Reserved", "In Process" }));

        bookTable.setAutoCreateRowSorter(true);
        bookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title", "Author", "Genre", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(bookTable);

        submitButton.setBackground(new java.awt.Color(255, 255, 255));
        submitButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        submitButton.setText("Search");
        submitButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        submitButton.setOpaque(true);
        submitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                submitButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                submitButtonMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                submitButtonMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                submitButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                submitButtonMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout catalogTabLayout = new javax.swing.GroupLayout(catalogTab);
        catalogTab.setLayout(catalogTabLayout);
        catalogTabLayout.setHorizontalGroup(
            catalogTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(catalogTabLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(catalogTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(statusSelect, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(genreSelect, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(submitButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE)
                .addContainerGap())
        );
        catalogTabLayout.setVerticalGroup(
            catalogTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(catalogTabLayout.createSequentialGroup()
                .addGroup(catalogTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(catalogTabLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(catalogTabLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(genreSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(statusSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Catalog", catalogTab);

        jPanel4.setBackground(new java.awt.Color(237, 151, 157));

        titleField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                titleFieldFocusGained(evt);
            }
        });

        authorField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                authorFieldFocusGained(evt);
            }
        });

        titleLabel.setText("Title");

        genreLabel.setText("Genre");

        authorLabel.setText("Author");

        statusLabel.setText("Status");

        statusField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Any Status", "Available", "Checked Out", "Reserved", "In Process" }));

        genreField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Any Genre", "Fantasy", "Horror", "Adventure", "Science Fiction", "Romance", "Mystery", "Comics / Graphic Novels", "Biography / Autobiography", "Self - Help", "Reference / Textbooks", " " }));

        submitButton23.setBackground(new java.awt.Color(255, 255, 255));
        submitButton23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        submitButton23.setText("Submit");
        submitButton23.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        submitButton23.setOpaque(true);
        submitButton23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                submitButton23MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                submitButton23MouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                submitButton23MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                submitButton23MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                submitButton23MouseEntered(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(titleLabel)
                    .addComponent(statusLabel)
                    .addComponent(genreLabel)
                    .addComponent(authorLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(authorField)
                    .addComponent(statusField, 0, 1, Short.MAX_VALUE)
                    .addComponent(genreField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titleField)
                    .addComponent(submitButton23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(490, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titleLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(authorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(authorLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(genreLabel)
                    .addComponent(genreField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusLabel)
                    .addComponent(statusField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(submitButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Manage Books", jPanel4);

        jPanel2.setBackground(new java.awt.Color(237, 151, 157));

        genreSelect1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Genre", "Fantasy", "Horror", "Adventure", "Science Fiction", "Romance", "Mystery", "Comics / Graphic Novels", "Biography / Autobiography", "Self - Help", "Reference / Textbooks", " " }));

        statusSelect1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Status", "Available", "Checked Out", "Reserved", "In Process" }));

        userTable.setAutoCreateRowSorter(true);
        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name", "Username", "Date Created"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(userTable);

        submitButton1.setBackground(new java.awt.Color(255, 255, 255));
        submitButton1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        submitButton1.setText("Search");
        submitButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        submitButton1.setOpaque(true);
        submitButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                submitButton1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                submitButton1MouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                submitButton1MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                submitButton1MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                submitButton1MouseEntered(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(statusSelect1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(genreSelect1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(submitButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(genreSelect1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(statusSelect1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(submitButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Manage Users", jPanel2);

        logoutButton.setBackground(new java.awt.Color(255, 255, 255));
        logoutButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logoutButton.setText("Logout");
        logoutButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logoutButton.setOpaque(true);
        logoutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                logoutButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                logoutButtonMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutButtonMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logoutButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logoutButtonMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(exitButton))
                    .addComponent(welcomeLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(exitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(welcomeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void exitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitButtonMouseClicked

    private void logoutButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutButtonMousePressed
        // TODO add your handling code here:
        changeColor(logoutButton, 155, 155, 155);
    }//GEN-LAST:event_logoutButtonMousePressed

    private void logoutButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutButtonMouseReleased
        // TODO add your handling code here:
        changeColor(logoutButton, 255, 255, 255);
    }//GEN-LAST:event_logoutButtonMouseReleased

    private void logoutButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutButtonMouseClicked
        // TODO add your handling code here:
        this.dispose();
        try {
            Thread.sleep(500);
        } catch (InterruptedException ex) {
            System.out.println(ex);
        }
        new loginPage().setVisible(true);
    }//GEN-LAST:event_logoutButtonMouseClicked

    private void logoutButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutButtonMouseExited
        // TODO add your handling code here:
        changeColor(logoutButton, 255, 255, 255);
    }//GEN-LAST:event_logoutButtonMouseExited

    private void logoutButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutButtonMouseEntered
        // TODO add your handling code here:
        changeColor(logoutButton, 155, 155, 155);
    }//GEN-LAST:event_logoutButtonMouseEntered

    private void titleFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_titleFieldFocusGained
        // TODO add your handling code here:
        onFocus(titleField);
    }//GEN-LAST:event_titleFieldFocusGained

    private void authorFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_authorFieldFocusGained
        // TODO add your handling code here:
        onFocus(authorField);
    }//GEN-LAST:event_authorFieldFocusGained

    private void submitButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitButtonMousePressed
        // TODO add your handling code here:
        changeColor(submitButton, 155, 155, 155);
    }//GEN-LAST:event_submitButtonMousePressed

    private void submitButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitButtonMouseReleased
        // TODO add your handling code here:
        changeColor(submitButton, 255, 255, 255);
    }//GEN-LAST:event_submitButtonMouseReleased

    private void submitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitButtonMouseClicked
        // TODO add your handling code here:
        clearTable(bookTable);
        if (genreSelect.getSelectedIndex() == 0 && statusSelect.getSelectedIndex() == 0) {
            findAllBooks();
        } else {
            findBooks();
        }
    }//GEN-LAST:event_submitButtonMouseClicked

    private void submitButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitButtonMouseExited
        // TODO add your handling code here:
        changeColor(submitButton, 255, 255, 255);
    }//GEN-LAST:event_submitButtonMouseExited

    private void submitButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitButtonMouseEntered
        // TODO add your handling code here:
        changeColor(submitButton, 155, 155, 155);
    }//GEN-LAST:event_submitButtonMouseEntered

    private void submitButton23MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitButton23MousePressed
        // TODO add your handling code here:
        changeColor(submitButton23, 155, 155, 155);
    }//GEN-LAST:event_submitButton23MousePressed

    private void submitButton23MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitButton23MouseReleased
        // TODO add your handling code here:
        changeColor(submitButton23, 255, 255, 255);
    }//GEN-LAST:event_submitButton23MouseReleased

    private void submitButton23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitButton23MouseClicked
        // TODO add your handling code here:

        model.setTitle(titleField.getText());
        model.setAuthor(authorField.getText());
        model.setGenre(String.valueOf(genreField.getSelectedItem()));
        model.setStatus(statusField.getSelectedItem().toString());

        if (model.getTitle().isEmpty() | model.getAuthor().isEmpty() | model.getGenre().isEmpty() | model.getStatus().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Empty Field. Please try again");
        } else {
            model.addBook();
            clearAll();
        }
    }//GEN-LAST:event_submitButton23MouseClicked

    private void submitButton23MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitButton23MouseExited
        // TODO add your handling code here:
        changeColor(submitButton23, 255, 255, 255);
    }//GEN-LAST:event_submitButton23MouseExited

    private void submitButton23MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitButton23MouseEntered
        // TODO add your handling code here:
        changeColor(submitButton23, 155, 155, 155);
    }//GEN-LAST:event_submitButton23MouseEntered

    private void submitButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitButton1MousePressed
        // TODO add your handling code here:
        changeColor(submitButton1, 155, 155, 155);
    }//GEN-LAST:event_submitButton1MousePressed

    private void submitButton1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitButton1MouseReleased
        // TODO add your handling code here:
        changeColor(submitButton1, 255, 255, 255);
    }//GEN-LAST:event_submitButton1MouseReleased

    private void submitButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitButton1MouseClicked
        // TODO add your handling code here:
        clearTable(userTable);
        findAllUsers();
    }//GEN-LAST:event_submitButton1MouseClicked

    private void submitButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitButton1MouseExited
        // TODO add your handling code here:
        changeColor(submitButton1, 255, 255, 255);
    }//GEN-LAST:event_submitButton1MouseExited

    private void submitButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitButton1MouseEntered
        // TODO add your handling code here:
        changeColor(submitButton1, 155, 155, 155);
    }//GEN-LAST:event_submitButton1MouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainAdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainAdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainAdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainAdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new mainAdminPage("").setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(mainAdminPage.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField authorField;
    private javax.swing.JLabel authorLabel;
    private javax.swing.JTable bookTable;
    private javax.swing.JPanel catalogTab;
    private javax.swing.JLabel exitButton;
    private javax.swing.JComboBox<String> genreField;
    private javax.swing.JLabel genreLabel;
    private javax.swing.JComboBox<String> genreSelect;
    private javax.swing.JComboBox<String> genreSelect1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel logoutButton;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JPanel profileTab;
    private javax.swing.JComboBox<String> statusField;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JComboBox<String> statusSelect;
    private javax.swing.JComboBox<String> statusSelect1;
    private javax.swing.JLabel submitButton;
    private javax.swing.JLabel submitButton1;
    private javax.swing.JLabel submitButton23;
    private javax.swing.JTextField titleField;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTable userTable;
    private javax.swing.JLabel welcomeLabel;
    // End of variables declaration//GEN-END:variables

    public void changeColor(JLabel label, int r, int g, int b) {
        label.setBackground(new Color(r, g, b));
    }

    public void clearAll() {
        titleField.setText("");
        authorField.setText("");
        genreField.setSelectedIndex(0);
        statusField.setSelectedIndex(0);
    }

    public void onFocus(JTextField x) {
        x.selectAll();
    }

    public void findBooks() {

        DefaultTableModel model = (DefaultTableModel) bookTable.getModel();
        String sql = "select * from books where genre = ? OR status = ?";

        try {
            Connection conn = DriverManager.getConnection(url, "cj", "123");
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, String.valueOf(genreSelect.getSelectedItem()));
            stmt.setString(2, String.valueOf(statusSelect.getSelectedItem()));
            ResultSet rs = stmt.executeQuery();
            while (rs.next()) {
                String d = rs.getString("title");
                String e = rs.getString("author");
                String f = rs.getString("genre");
                String g = rs.getString("status");
                model.addRow(new Object[]{d, e, f, g});
            }
        } catch (SQLException e) {
            System.out.println(e);
        }

    }

    public void clearTable(JTable table) {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
    }

    public void findAllBooks() {

        DefaultTableModel model = (DefaultTableModel) bookTable.getModel();
        String sql = "select * from books";

        try {
            Connection conn = DriverManager.getConnection(url, "cj", "123");
            PreparedStatement stmt = conn.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();
            while (rs.next()) {
                String d = rs.getString("title");
                String e = rs.getString("author");
                String f = rs.getString("genre");
                String g = rs.getString("status");
                model.addRow(new Object[]{d, e, f, g});
            }
        } catch (SQLException e) {
            System.out.println(e);
        }

    }
    
    public void findAllUsers() {

        DefaultTableModel model = (DefaultTableModel) userTable.getModel();
        String sql = "select * from users";

        try {
            Connection conn = DriverManager.getConnection(url, "cj", "123");
            PreparedStatement stmt = conn.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();
            while (rs.next()) {
                String d = rs.getString("firstName");
                String e = rs.getString("lastName");
                String f = rs.getString("username");
                String g = rs.getString("dateCreated");
                model.addRow(new Object[]{d, e, f, g});
            }
        } catch (SQLException e) {
            System.out.println(e);
        }

    }

}
